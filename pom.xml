<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.terra</groupId>
  <artifactId>scala-js-junit4-tools</artifactId>
  <version>0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Scala.js JUnit4 tools</name>
  <description>Invoke Scala.js JUnit tests inside JavaScript VM, such as Node.js or Phantom.js</description>
  
  <url>https://github.com/hunterpayne/scala-js-junit4-tools</url>
  <scm>
    <url>https://github.com/hunterpayne/scala-js-junit4-tools</url>
    <connection>scm:git:git@github.com:hunterpayne/scala-js-junit4-tools.git</connection>
    <developerConnection>scm:git:git@github.com:hunterpayne/scala-js-junit4-tools.git</developerConnection>
  </scm>
  
  <licenses>
    <license>
      <name>Apache-2.0</name>
    </license>
  </licenses>
  
  <modules>
    <module>cross/2.11</module>
    <module>cross/2.12</module>
    <!-- <module>cross/2.13</module> -->
  </modules>
  
  <properties>
    
    <!-- Release series. -->
    <revision>1.1.3</revision>
    
    <version.scala.epoch>2.11</version.scala.epoch>
    <version.scala.release>2.11.12</version.scala.release>
    
    <!-- Scala.js stack. -->
    <version.sjs.epoch>0.6</version.sjs.epoch>
    <version.sjs.release>0.6.26</version.sjs.release>
    <version.sjs.library>sjs0.6_${version.scala.epoch}</version.sjs.library>
    
    <!-- Provision testing resources -->
    <test-tool.dir>${project.basedir}/test-tool</test-tool.dir>
    <test-tool.node.dir>${test-tool.dir}/node</test-tool.node.dir>
    <test-tool.node.exec>${test-tool.node.dir}/node</test-tool.node.exec>
    <test-tool.phantom.dir>${test-tool.dir}/phantomjs</test-tool.phantom.dir>
    <test-tool.phantom.exec>${test-tool.phantom.dir}/phantomjs</test-tool.phantom.exec>

    <!-- scalatest -->
    <version.scalatest>3.0.6</version.scalatest>
    
  </properties>
  
  <dependencies>
    
    <!--
        Note: keep order.
        scalajs-junit-test-runtime overrides org.junit.* classes.
    -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
    </dependency>

    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${version.scala.epoch}</artifactId>
      <version>${version.scalatest}</version>
      <exclusions>
        <exclusion>
          <groupId>org.scala-lang</groupId>
          <artifactId>scala-reflect</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.scala-js</groupId>
      <artifactId>scalajs-junit-test-runtime_${version.scala.epoch}</artifactId>
      <version>${version.sjs.release}</version>
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${version.scala.release}</version>
      <scope>compile</scope>
    </dependency>
    
    <dependency>
      <groupId>org.scala-js</groupId>
      <artifactId>scalajs-library_${version.scala.epoch}</artifactId>
      <version>${version.sjs.release}</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.25</version>
    </dependency>
    
    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
      <version>1.3.3</version>
    </dependency>

    <dependency>
      <groupId>com.lihaoyi</groupId>
      <artifactId>upickle_${version.scala.epoch}</artifactId>
      <version>0.7.1</version>
      <exclusions>
        <exclusion>
          <groupId>org.scala-lang</groupId>
          <artifactId>scala-reflect</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.scala-lang</groupId>
          <artifactId>scala-library</artifactId>
        </exclusion>
      </exclusions> 
    </dependency>
    
    <dependency>
      <groupId>org.scala-js</groupId>
      <artifactId>scalajs-sbt-test-adapter_${version.scala.epoch}</artifactId>
      <version>${version.sjs.release}</version>
    </dependency>
    
    <dependency>
      <groupId>org.scala-js</groupId>
      <artifactId>scalajs-js-envs_${version.scala.epoch}</artifactId>
      <version>${version.sjs.release}</version>
    </dependency>
    
    <!-- Testing -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>webjars-locator-core</artifactId>
      <version>0.35</version>
    </dependency>
    
    <dependency>
      <groupId>org.scala-js</groupId>
      <artifactId>scalajs-junit-test-plugin_${version.scala.release}</artifactId>
      <version>${version.sjs.release}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.scala-lang</groupId>
          <artifactId>scala-reflect</artifactId>
        </exclusion>
      </exclusions> 
    </dependency>
    
    <!-- Native JS. -->
    
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>jquery</artifactId>
      <version>3.3.1</version>
      <scope>test</scope>
    </dependency>
    
    <!-- Scala.js facade. -->
    
    <dependency>
      <groupId>be.doeraene</groupId>
      <artifactId>scalajs-jquery_${version.sjs.library}</artifactId>
      <version>0.9.2</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.scala-js</groupId>
      <artifactId>scalajs-dom_${version.sjs.library}</artifactId>
      <version>0.9.4</version>
      <scope>test</scope>
    </dependency>
    
  </dependencies>
  
  <build>
    
    <plugins>
      
      <!-- Provision Phantom.js -->
      <plugin>
        <groupId>com.github.klieber</groupId>
        <artifactId>phantomjs-maven-plugin</artifactId>
        <version>0.7</version>
        <configuration>
        </configuration>
        <executions>
          <execution>
            <id>install-phantom</id>
            <phase>validate</phase>
            <goals>
              <goal>install</goal>
            </goals>
            <configuration>
              <version>2.1.1</version>
              <propertyName>phantomjs.binary</propertyName>
              <outputDirectory>${test-tool.phantom.dir}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <!-- Provision Phantom.js -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>install-phantom</id>
            <phase>validate</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target name="install-phantom">
                <mkdir dir="${test-tool.phantom.dir}" />
                <copy file="${phantomjs.binary}" tofile="${test-tool.phantom.exec}" />
                <chmod file="${test-tool.phantom.exec}" perm="u+rx" />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <!-- Provision Node.js -->
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>1.6</version>
        <configuration>
          <installDirectory>${test-tool.dir}</installDirectory>
          <nodeDownloadRoot>http://nodejs.org/dist/</nodeDownloadRoot>
          <npmDownloadRoot>http://registry.npmjs.org/npm/-/</npmDownloadRoot>
          <npmRegistryURL>http://registry.npmjs.org/</npmRegistryURL>
        </configuration>
        <executions>
          <execution>
            <id>install-node</id>
            <phase>validate</phase>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <nodeVersion>v9.4.0</nodeVersion>
            </configuration>
          </execution>
          <execution>
            <id>install-source-map</id>
            <phase>validate</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>
		<![CDATA[
			 install npm@5.6.0 jsdom@11.6.0 source-map-support@0.5.2 --prefix ${test-tool.dir}/node
		]]>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <skip>true</skip>
          <skipMain>true</skipMain>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>com.carrotgarden.maven</groupId>
        <artifactId>scalor-maven-plugin_2.12</artifactId>
        <!-- <version>1.3.2.20180223214239</version> -->
        <!-- <version>1.4.0.20180226025714</version> -->
	
        <configuration>

        </configuration>
	
        <executions>
	  
          <execution>
            <id>default</id>
            <goals>
              <goal>eclipse-config</goal>
            </goals>
            <configuration>
            </configuration>
          </execution>
          <execution>
            <id>main</id>
            <goals>
              <goal>register-main</goal>
              <goal>compile-main</goal>
            </goals>
            <configuration>
              <definePluginList>
                <!-- No plugins in main. -->
              </definePluginList>
            </configuration>
          </execution>
          <execution>
            <id>test</id>
            <goals>
              <goal>register-test</goal>
              <goal>compile-test</goal>
            </goals>
            <configuration>
              <definePluginList>
                <!-- Produce Scala.js *.sjsir classes. -->
                <dependency>
                  <groupId>org.scala-js</groupId>
                  <artifactId>scalajs-compiler_${version.scala.release}</artifactId>
                  <version>${version.sjs.release}</version>
                </dependency>
                <!-- Convert JUnit annotations to JS meta data. -->
                <dependency>
                  <groupId>org.scala-js</groupId>
                  <artifactId>scalajs-junit-test-plugin_${version.scala.release}</artifactId>
                  <version>${version.sjs.release}</version>
                </dependency>
              </definePluginList>
            </configuration>
          </execution>
        </executions>
	
      </plugin>
      
      <!-- Produce clean deployment pom.xml. -->
      <plugin>
        <groupId>com.carrotgarden.maven</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
      </plugin>
      
      <!-- Invoke integration tests. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-invoker-plugin</artifactId>
        <configuration>
          <showErrors>true</showErrors>
          <streamLogs>true</streamLogs>
          <pomIncludes>
            <include>test-xxx/pom.xml</include>
          </pomIncludes>
        </configuration>
      </plugin>
      
      <!-- Control JUnit test order. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
	<version>2.18.1</version>
        <configuration>
          <runOrder>alphabetical</runOrder>
	  <excludes>
            <exclude>**/Test0*</exclude>
	  </excludes>
        </configuration>
      </plugin>
    </plugins>
  </build>    
</project>
